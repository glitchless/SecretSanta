openapi: 3.0.0
info:
  title: Тайный Санта
  description: После успешной авторизации в cookie прописывается токен. Прокидывать
    его ручками не нужно
  version: 1.0.0
servers:
  - url: https://santa.glitchless.ru/api/
    description: Glitchless
  - url: http://localhost
    description: Localhost
tags:
  - name: stats
    description: Santa stats
  - name: auth
    description: All auth variants
  - name: profile
    description: Operations about user
  - name: chat
    description: Operations with chat
paths:
  /auth/tp:
    post:
      tags:
        - auth
      description: "Авторизация через oauth технопорталов"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "bJN2d16XislQ4Hun5dZ8qFAWLaqgP"
                auth_source:
                  type: string
                  enum: [ "TECHNOPARK","MAILCOURSES","LINUX","DATA","POLIS","TECHNOATOM","TRACK","SPHERE" ]
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
  /auth/vas3k:
    get:
      tags:
        - auth
      description: "Авторизация через vas3k external auth. Если вызвать без параметров, вернет редирект на вастрик"
      parameters:
        - in: query
          name: jwt
          schema:
            type: string
          description: JWT из https://vas3k.club/auth/external/
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImp0aSI6IjAwOTZhOGE2LTBlNGQtNDdlNy05MTA3LWI3OWI3OGY5ZTFiZSIsImlhdCI6MTYwNDAwNzg0NSwiZXhwIjoxNjA0MDExNDQ1fQ.n3onDyIIP_ZdWvtfJzOhnc86DWZXnCNqMSnbK700k_I"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
  /auth/test:
    get:
      tags:
        - auth
      description: "Тестовая авторизация доступная только на dev сервере"
      parameters:
        - in: query
          name: pair_user
          schema:
            type: int
        - in: query
          name: is_active
          schema:
            type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
  /auth/logout:
    post:
      tags:
        - auth
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /stats:
    get:
      tags:
        - stats
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseStats'
  /profile:
    get:
      tags:
        - profile
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
        default:
          description: On error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - profile
      description: "Достаточно хотя бы одного параметра в POST запросе"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_active:
                  type: boolean
                  nullable: false
                is_sent:
                  type: boolean
                  nullable: false
                is_received:
                  type: boolean
                  nullable: false
                email:
                  type: string
                  nullable: true
                delivery_information:
                  $ref: '#/components/schemas/DeliveryInformation'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "400":
          description: 'Ошибка связанная с превышением максимальной длины строки'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  status:
                    type: string
                    example: OK
                  message:
                    type: object
                    properties:
                      errors:
                        type: object
                        properties:
                          delivery_comment:
                            type: string
                            example: 'Поле комментарии не должно быть больше 256-и символов'
                          delivery_name:
                            type: string
                            example: 'Поле c именем не должно быть больше 25-и символов'
  /chat:
    get:
      tags:
        - chat
      parameters:
        - in: query
          name: with
          schema:
            type: string
            default: sender
            enum: [ receiver, sender ]
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset_id
          schema:
            type: integer
          description: ID последнего сообщения
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseChat'
        default:
          description: On error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - chat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                to:
                  type: string
                  enum: [ receiver, sender ]
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /chat/wait_new:
    get:
      tags:
        - chat
      parameters:
        - in: query
          name: with
          schema:
            type: string
            default: sender
            enum: [ receiver, sender ]
        - in: query
          name: timeout
          schema:
            type: integer
        - in: query
          name: offset_id
          schema:
            type: integer
          description: ID последнего сообщения
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseChat'
        default:
          description: On error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

components:
  schemas:
    Chat:
      type: object
      properties:
        message_count_total:
          type: integer
        message_count:
          type: integer
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        text:
          type: string
        id:
          type: integer
        timestamp:
          type: integer
        from:
          type: string
          enum: [ current, companion ]
    Stats:
      type: object
      properties:
        users:
          type: object
          properties:
            active:
              type: integer
              format: int64
            sent:
              type: integer
              format: int64
            received:
              type: integer
              format: int64
        shuffle_date:
          type: integer
          format: int64
        start_date:
          type: integer
          format: int64
        end_date:
          type: integer
          format: int64
        is_expired:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        full_name:
          type: string
          example: Куликов Никита
        is_active:
          type: boolean
          example: false
          description: "Согласился ли человек учавствовать"
        is_sent:
          type: boolean
          example: false
          description: "Отправил ли человек подарок"
        is_received:
          type: boolean
          example: false
          description: "Получил ли человек подарок"
        email:
          type: string
          example: "example@glitchless.ru"
        pair_user:
          type: object
          properties:
            id:
              type: integer
              format: int64
            full_name:
              type: string
              example: Куликов Никита
            is_active:
              type: boolean
              example: false
              description: "Согласился ли человек учавствовать"
            is_sent:
              type: boolean
              example: false
              description: "Отправил ли человек подарок"
            is_received:
              type: boolean
              example: false
              description: "Получил ли человек подарок"
            photo_url:
              type: string
            profile_url:
              type: string
            delivery_information:
              $ref: '#/components/schemas/DeliveryInformation'
        pair_sent:
          type: boolean
          example: false
          description: "Отправили ли вам подарок"
        delivery_information:
          $ref: '#/components/schemas/DeliveryInformation'
        photo_url:
          type: string
        profile_url:
          type: string
    ApiResponseStats:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        status:
          type: string
          example: OK
        message:
          $ref: '#/components/schemas/Stats'
    ApiResponseChat:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        status:
          type: string
          example: OK
        message:
          $ref: '#/components/schemas/Chat'
    ApiResponseUser:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        status:
          type: string
          example: OK
        message:
          $ref: '#/components/schemas/User'
    DeliveryInformation:
      type: object
      properties:
        name:
          type: string
          description: По дефолту возращается имя из сервиса авторизации
          example: Куликов Никита
        comment:
          type: string
          example: "Мне очень нравятся гаджеты и сладости"
          default: "Мне очень нравятся гаджеты и сладости"
        address:
          type: string
          example: "Великий Устюг, улица Хороших IT-шников, дом с красной крышой"
          default: "Великий Устюг, улица Хороших IT-шников, дом с красной крышой"
        index:
          type: string
          example: "000000"
          default: "000000"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 403
          enum:
            - 200
            - 404
            - 403
        status:
          type: string
          example: FORBIDDEN
          enum:
            - OK
            - NOT_FOUND
            - FORBIDDEN
        message:
          type: string
          example: "Ошибка"
          description: "Текстовое описание ошибки"
